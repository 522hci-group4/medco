{"ast":null,"code":"var _jsxFileName = \"/Users/gunashree/Documents/GitHub/medco/src/pages/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"./supabaseClient\"; // Ensure this file is correctly set up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const navigate = useNavigate();\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n\n  // Handle file upload\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    console.log(\"File selected:\", file); // Debugging log\n\n    if (!file) {\n      alert(\"Please select a file!\");\n      return;\n    }\n\n    // Check if the user is logged in\n    const user = supabase.auth.user();\n    if (!user) {\n      alert(\"You must be logged in to upload files.\");\n      return;\n    }\n    const userId = user.id; // Get the user's unique ID\n\n    setUploadStatus(\"Uploading...\");\n    try {\n      // Upload file to Supabase Storage under a user-specific folder\n      const {\n        data,\n        error\n      } = await supabase.storage.from(\"pdf-uploads\") // Replace with your Supabase bucket name\n      .upload(`uploads/${userId}/${file.name}`, file, {\n        cacheControl: \"3600\",\n        // Optional cache control\n        upsert: false // Optional: set to false to avoid overwriting files\n      });\n      if (error) {\n        throw new Error(error.message);\n      }\n      console.log(\"File uploaded successfully:\", data);\n      setUploadStatus(\"File uploaded successfully!\");\n\n      // Redirect to the visualization page\n      navigate(\"/visualization\");\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      setUploadStatus(`Upload failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"MedCo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.uploadSection,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pdfUpload\",\n        style: styles.uploadLabel,\n        children: \"Upload Your PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"pdfUpload\",\n        accept: \".pdf\",\n        onChange: handleFileUpload,\n        style: styles.uploadInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n// Inline Styles\n_s(Upload, \"T3PUsL3alxK8Iv7LvG3LPXzXnug=\", false, function () {\n  return [useNavigate];\n});\n_c = Upload;\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    backgroundColor: \"#e0f7f7\",\n    // Background color matching your design\n    padding: \"20px\" // Added padding to avoid elements being stuck to the edges\n  },\n  title: {\n    fontSize: \"2rem\",\n    color: \"#008080\",\n    // Teal color for the title\n    marginBottom: \"20px\"\n  },\n  uploadSection: {\n    textAlign: \"center\"\n  },\n  uploadLabel: {\n    display: \"inline-block\",\n    padding: \"10px 20px\",\n    backgroundColor: \"#008080\",\n    color: \"white\",\n    fontSize: \"16px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  uploadInput: {\n    display: \"none\" // Hide the default file input\n  }\n};\nexport default Upload; // Ensure correct export name\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useNavigate","supabase","jsxDEV","_jsxDEV","Upload","_s","navigate","uploadStatus","setUploadStatus","handleFileUpload","event","file","target","files","console","log","alert","user","auth","userId","id","data","error","storage","from","upload","name","cacheControl","upsert","Error","message","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","uploadSection","htmlFor","uploadLabel","type","accept","onChange","uploadInput","_c","display","flexDirection","alignItems","justifyContent","height","backgroundColor","padding","fontSize","color","marginBottom","textAlign","borderRadius","cursor","$RefreshReg$"],"sources":["/Users/gunashree/Documents/GitHub/medco/src/pages/Upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"./supabaseClient\"; // Ensure this file is correctly set up\n\nfunction Upload() {\n    const navigate = useNavigate();\n    const [uploadStatus, setUploadStatus] = useState(\"\");\n\n    // Handle file upload\n    const handleFileUpload = async (event) => {\n        const file = event.target.files[0];\n        console.log(\"File selected:\", file);  // Debugging log\n\n        if (!file) {\n            alert(\"Please select a file!\");\n            return;\n        }\n\n        // Check if the user is logged in\n        const user = supabase.auth.user();\n        if (!user) {\n            alert(\"You must be logged in to upload files.\");\n            return;\n        }\n\n        const userId = user.id;  // Get the user's unique ID\n\n        setUploadStatus(\"Uploading...\");\n\n        try {\n            // Upload file to Supabase Storage under a user-specific folder\n            const { data, error } = await supabase.storage\n                .from(\"pdf-uploads\")  // Replace with your Supabase bucket name\n                .upload(`uploads/${userId}/${file.name}`, file, {\n                    cacheControl: \"3600\", // Optional cache control\n                    upsert: false, // Optional: set to false to avoid overwriting files\n                });\n\n            if (error) {\n                throw new Error(error.message);\n            }\n\n            console.log(\"File uploaded successfully:\", data);\n            setUploadStatus(\"File uploaded successfully!\");\n\n            // Redirect to the visualization page\n            navigate(\"/visualization\");\n\n        } catch (error) {\n            console.error(\"Upload failed:\", error);\n            setUploadStatus(`Upload failed: ${error.message}`);\n        }\n    };\n\n    return (\n        <div style={styles.container}>\n            <h1 style={styles.title}>MedCo</h1>\n            <div style={styles.uploadSection}>\n                <label htmlFor=\"pdfUpload\" style={styles.uploadLabel}>\n                    Upload Your PDF\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"pdfUpload\"\n                    accept=\".pdf\"\n                    onChange={handleFileUpload}\n                    style={styles.uploadInput}\n                />\n            </div>\n            {uploadStatus && <p>{uploadStatus}</p>}\n        </div>\n    );\n}\n\n// Inline Styles\nconst styles = {\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"#e0f7f7\", // Background color matching your design\n        padding: \"20px\",  // Added padding to avoid elements being stuck to the edges\n    },\n    title: {\n        fontSize: \"2rem\",\n        color: \"#008080\", // Teal color for the title\n        marginBottom: \"20px\",\n    },\n    uploadSection: {\n        textAlign: \"center\",\n    },\n    uploadLabel: {\n        display: \"inline-block\",\n        padding: \"10px 20px\",\n        backgroundColor: \"#008080\",\n        color: \"white\",\n        fontSize: \"16px\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\",\n    },\n    uploadInput: {\n        display: \"none\", // Hide the default file input\n    },\n};\n\nexport default Upload;  // Ensure correct export name\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}